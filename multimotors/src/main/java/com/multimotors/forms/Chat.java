package com.multimotors.forms;

import com.multimotors.models.Message;
import com.multimotors.controllers.ChatController;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Timer;
import java.util.TimerTask;

/**
 * @author Fabian
 * @author Sergio 
 */
public class Chat extends javax.swing.JDialog {
    
    public Chat(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        initChatGTP();
    }
    
    public Chat(java.awt.Frame parent, boolean modal, int id_user) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        initChatGlobal(id_user);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textarea = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        btn_login = new javax.swing.JButton();
        txt_message = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btn_ppal = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(null);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textarea.setBackground(new java.awt.Color(204, 204, 255));
        textarea.setColumns(20);
        textarea.setRows(5);
        textarea.setLineWrap(true);
        textarea.setWrapStyleWord(true);
        jScrollPane2.setViewportView(textarea);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 460, 360));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Avatar_Container.png"))); // NOI18N
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 500, 70));

        btn_login.setBackground(new java.awt.Color(255, 153, 255));
        btn_login.setText("Enviar");
        btn_login.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });
        jPanel2.add(btn_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 470, 70, 40));
        jPanel2.add(txt_message, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 380, 40));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Card_Content.png"))); // NOI18N
        jLabel4.setAutoscrolls(true);
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel4.setOpaque(true);
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 500, 460));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 85, 500, 540));

        jPanel1.setBackground(new java.awt.Color(244, 243, 243));
        jPanel1.setForeground(new java.awt.Color(60, 63, 65));
        jPanel1.setMaximumSize(new java.awt.Dimension(1280, 720));
        jPanel1.setMinimumSize(new java.awt.Dimension(1280, 720));
        jPanel1.setPreferredSize(new java.awt.Dimension(1280, 720));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_ppal.setBackground(new java.awt.Color(255, 153, 255));
        btn_ppal.setText("Volver a Mi Cuenta");
        btn_ppal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btn_ppal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ppalActionPerformed(evt);
            }
        });
        jPanel1.add(btn_ppal, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 670, 390, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Ellipse 209.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 450, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Union.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setMaximumSize(new java.awt.Dimension(1280, 720));
        jLabel1.setMinimumSize(new java.awt.Dimension(1280, 720));
        jLabel1.setPreferredSize(new java.awt.Dimension(1280, 720));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        sendMenssage();
    }//GEN-LAST:event_btn_loginActionPerformed

    private void btn_ppalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ppalActionPerformed
        myAccount();
    }//GEN-LAST:event_btn_ppalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Chat dialog = new Chat(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_login;
    private javax.swing.JButton btn_ppal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextArea textarea;
    private javax.swing.JTextField txt_message;
    // End of variables declaration//GEN-END:variables
  
    private int id_user;
    private boolean isglobal;
    private String last_refresh;
    private ChatController chatService;
    private SimpleDateFormat formatES;
    private Timer timer;
    
    private void init(){
        this.chatService = new ChatController();
        this.formatES = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    }
        
    private void initChatGTP(){
        init();
        this.isglobal = false;
        this.textarea.setText(textarea.getText()+"Asistente Virtual: \nHola, en que puedo ayudarte?"+"\n\n");
    }
    
    private void initChatGlobal(int id_user){
        init();
        this.isglobal = true;
        this.id_user = id_user;
        this.last_refresh = formatES.format(new Date());
        autoRefresh();
    }
    
    private void sendMenssage() {
        if(!isglobal){
            sendMenssageChatGPT();
        } else {
            sendMenssageGlobal();
        } 
    }
    
    private void sendMenssageChatGPT() {
        String texto = txt_message.getText();
        textarea.setText(textarea.getText() + "YO: \n" + texto + "\n\n");
        txt_message.setText("");
        Thread threadChat;
        threadChat = new Thread(new respuestaMensaje(texto));
        threadChat.start();
    }
    
    private void sendMenssageGlobal(){
        textarea.setText(textarea.getText()+" YO: \n "+txt_message.getText()+"\n\n");
        chatService.sendMessageGlobal(id_user, txt_message.getText());
        txt_message.setText("");
    }

    private void refreshChat(){
        HashMap<Integer, Message>  messages = chatService.readMessages(id_user, last_refresh);  
        last_refresh = formatES.format(new Date());
        
        for(Message message : messages.values()){
            textarea.setText(textarea.getText()+" "+message.getUser_name()+": \n "+message.getMessage()+"\n\n");
        }
    }
    
    public void autoRefresh() {
        timer = new Timer();
        TimerTask tarea = new TimerTask() {
            @Override
            public void run() {
                refreshChat();
            }
        };
        timer.scheduleAtFixedRate(tarea, 0, 10000);
    }

    private void myAccount() {
        if(timer != null){
            timer.cancel();
        }
        this.setVisible(false);
    }
    
    private class respuestaMensaje implements Runnable {

        private final String texto;

        public respuestaMensaje(String texto) {
            this.texto = texto;
        }

        @Override
        public void run() {
            try {
                textarea.setText(textarea.getText() + "Asistente Virtual: \n" + chatService.sendMessage(texto).trim() + "\n\n");
            } catch (IOException ex) {
                textarea.setText(textarea.getText() + "Asistente Virtual: \nLo siento, es una pregunta difícil de responder. Pregúntame otra cosa.\n\n");
            }
        }
    }
}