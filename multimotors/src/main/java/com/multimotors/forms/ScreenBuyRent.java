package com.multimotors.forms;

import com.multimotors.invoice.model.HeaderDetails;
import com.multimotors.invoice.model.InfoDetails;
import com.multimotors.invoice.model.Product;
import com.multimotors.invoice.model.ProductHeader;
import com.multimotors.invoice.service.InvoiceFormatPDF;
import com.multimotors.models.Address;
import com.multimotors.models.Sales;
import com.multimotors.models.User;
import com.multimotors.models.Vehicle;
import com.multimotors.controllers.AddressController;
import com.multimotors.controllers.SalesController;
import com.multimotors.utils.PaymentUtil;
import com.multimotors.utils.SendEmail;
import com.multimotors.utils.Utils;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.regex.Pattern;

/**
 * @author Sergio
 * @author Fabian 
 */
public class ScreenBuyRent extends javax.swing.JDialog {

    public ScreenBuyRent(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
    }

    public ScreenBuyRent(java.awt.Frame parent, boolean modal, User user, Vehicle vehicle) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        init(user, vehicle);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel7 = new javax.swing.JPanel();
        btn_buy = new javax.swing.JButton();
        btn_rent = new javax.swing.JButton();
        panel_form = new javax.swing.JPanel();
        btn_rent1 = new javax.swing.JButton();
        btn_verfactura = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txt_city = new javax.swing.JTextField();
        txt_poblation = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_zipcode = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txt_portal = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txt_number = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txt_street = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txt_floor = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txt_door = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        title_1 = new javax.swing.JLabel();
        txt_title1 = new javax.swing.JTextField();
        txt_title2 = new javax.swing.JTextField();
        title_2 = new javax.swing.JLabel();
        title_3 = new javax.swing.JLabel();
        txt_title3 = new javax.swing.JTextField();
        title_4 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        title_5 = new javax.swing.JLabel();
        txt_title5 = new javax.swing.JTextField();
        txt_title4 = new javax.swing.JComboBox<>();
        rb_card = new javax.swing.JRadioButton();
        rb_transfer = new javax.swing.JRadioButton();
        combo_pais = new javax.swing.JComboBox<>();
        title_6 = new javax.swing.JLabel();
        cb_pay_type = new javax.swing.JComboBox<>();
        title_7 = new javax.swing.JLabel();
        spn_num_cuotas = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_buy.setBackground(new java.awt.Color(255, 153, 255));
        btn_buy.setText("COMPRAR");
        btn_buy.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btn_buy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buyActionPerformed(evt);
            }
        });
        jPanel7.add(btn_buy, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 140, 40));

        btn_rent.setBackground(new java.awt.Color(255, 153, 255));
        btn_rent.setText("RENTAR");
        btn_rent.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btn_rent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rentActionPerformed(evt);
            }
        });
        jPanel7.add(btn_rent, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 140, 40));

        panel_form.setBackground(new java.awt.Color(255, 255, 255));

        btn_rent1.setBackground(new java.awt.Color(255, 153, 255));
        btn_rent1.setText("FINALIZAR COMPRA");
        btn_rent1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btn_rent1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rent1ActionPerformed(evt);
            }
        });

        btn_verfactura.setBackground(new java.awt.Color(255, 153, 255));
        btn_verfactura.setText("IMPRIMIR FACTURA");
        btn_verfactura.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btn_verfactura.setEnabled(false);
        btn_verfactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_verfacturaActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(73, 80, 87));
        jLabel7.setText("País");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Datos de dirección");

        jLabel8.setForeground(new java.awt.Color(73, 80, 87));
        jLabel8.setText("Ciudad");

        jLabel9.setForeground(new java.awt.Color(73, 80, 87));
        jLabel9.setText("Población");

        jLabel10.setForeground(new java.awt.Color(73, 80, 87));
        jLabel10.setText("Código postal");

        jLabel11.setForeground(new java.awt.Color(73, 80, 87));
        jLabel11.setText("Bloque");

        jLabel12.setForeground(new java.awt.Color(73, 80, 87));
        jLabel12.setText("Número");

        jLabel13.setForeground(new java.awt.Color(73, 80, 87));
        jLabel13.setText("Nombre de la calle");

        jLabel14.setForeground(new java.awt.Color(73, 80, 87));
        jLabel14.setText("Planta");

        jLabel15.setForeground(new java.awt.Color(73, 80, 87));
        jLabel15.setText("Puerta");

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Datos de pago");

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        title_1.setForeground(new java.awt.Color(73, 80, 87));
        title_1.setText("Número de la tarjeta");

        txt_title2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_title2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_title2FocusLost(evt);
            }
        });

        title_2.setForeground(new java.awt.Color(73, 80, 87));
        title_2.setText("Fecha de caducidad");

        title_3.setForeground(new java.awt.Color(73, 80, 87));
        title_3.setText("Titular de la tarjeta");

        title_4.setForeground(new java.awt.Color(73, 80, 87));
        title_4.setText("Emisor de la tarjeta");

        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        title_5.setForeground(new java.awt.Color(73, 80, 87));
        title_5.setText("CVV");

        txt_title4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "VISA", "MASTERCARD", "AMEX" }));

        rb_card.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rb_card);
        rb_card.setSelected(true);
        rb_card.setText("Tarjeta");
        rb_card.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_cardActionPerformed(evt);
            }
        });

        rb_transfer.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(rb_transfer);
        rb_transfer.setText("Transferencia");
        rb_transfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_transferActionPerformed(evt);
            }
        });

        title_6.setForeground(new java.awt.Color(73, 80, 87));
        title_6.setText("Método de pago");

        cb_pay_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Al contado", "Financiado" }));
        cb_pay_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_pay_typeActionPerformed(evt);
            }
        });

        title_7.setForeground(new java.awt.Color(73, 80, 87));
        title_7.setText("Número de cuotas");

        spn_num_cuotas.setModel(new javax.swing.SpinnerNumberModel(1, 1, 36, 1));

        javax.swing.GroupLayout panel_formLayout = new javax.swing.GroupLayout(panel_form);
        panel_form.setLayout(panel_formLayout);
        panel_formLayout.setHorizontalGroup(
            panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panel_formLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_formLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_verfactura, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btn_rent1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71))
                    .addComponent(jSeparator2)
                    .addGroup(panel_formLayout.createSequentialGroup()
                        .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_formLayout.createSequentialGroup()
                                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(title_1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_title1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(56, 56, 56)
                                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_title2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(title_2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panel_formLayout.createSequentialGroup()
                                .addComponent(txt_title4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(title_5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_title5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(62, 62, 62)
                        .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(title_3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_title3, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(title_6, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(title_7, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(cb_pay_type, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spn_num_cuotas))
                        .addGap(76, 76, 76))
                    .addGroup(panel_formLayout.createSequentialGroup()
                        .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(title_4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panel_formLayout.createSequentialGroup()
                                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_street, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(48, 48, 48)
                                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_number, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46)
                                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_portal, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(50, 50, 50)
                                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_floor, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(57, 57, 57)
                                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_door, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panel_formLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rb_card, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rb_transfer, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_formLayout.createSequentialGroup()
                                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(combo_pais, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(52, 52, 52)
                                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_city, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panel_formLayout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panel_formLayout.createSequentialGroup()
                                        .addGap(52, 52, 52)
                                        .addComponent(txt_poblation, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(55, 55, 55)
                                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_zipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())))
            .addGroup(panel_formLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 1170, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panel_formLayout.setVerticalGroup(
            panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_formLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel2)
                .addGap(0, 0, 0)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_formLayout.createSequentialGroup()
                        .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panel_formLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_zipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panel_formLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_poblation, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_city, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20))
                    .addGroup(panel_formLayout.createSequentialGroup()
                        .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(12, 12, 12)
                        .addComponent(combo_pais, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel_formLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_portal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_formLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_floor, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_formLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_door, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(panel_formLayout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_street, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_formLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_number, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rb_card)
                    .addComponent(rb_transfer))
                .addGap(3, 3, 3)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_formLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(txt_title2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_formLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(title_2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_formLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_formLayout.createSequentialGroup()
                                .addComponent(title_1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_title1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_formLayout.createSequentialGroup()
                                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(title_3)
                                    .addComponent(title_6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_title3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cb_pay_type, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(11, 11, 11)
                .addComponent(title_7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_formLayout.createSequentialGroup()
                        .addComponent(spn_num_cuotas, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_rent1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_verfactura, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panel_formLayout.createSequentialGroup()
                        .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(title_4)
                            .addComponent(title_5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_title4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_title5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel7.add(panel_form, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 1140, 590));

        getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 1190, 660));

        jPanel1.setBackground(new java.awt.Color(244, 243, 243));
        jPanel1.setForeground(new java.awt.Color(60, 63, 65));
        jPanel1.setMaximumSize(new java.awt.Dimension(1280, 720));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/myacc_wp.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setMaximumSize(new java.awt.Dimension(1280, 720));
        jLabel1.setMinimumSize(new java.awt.Dimension(1280, 720));
        jLabel1.setPreferredSize(new java.awt.Dimension(1280, 720));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_buyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buyActionPerformed
        setMode(true);
    }//GEN-LAST:event_btn_buyActionPerformed

    private void btn_rentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rentActionPerformed
        setMode(false);
    }//GEN-LAST:event_btn_rentActionPerformed
    
    private void btn_rent1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rent1ActionPerformed
        comprobarDatos();
    }//GEN-LAST:event_btn_rent1ActionPerformed

    private void rb_cardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_cardActionPerformed
        configrbs();
    }//GEN-LAST:event_rb_cardActionPerformed

    private void rb_transferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_transferActionPerformed
        configrbs();
    }//GEN-LAST:event_rb_transferActionPerformed

    private void btn_verfacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_verfacturaActionPerformed
        verFactura();
    }//GEN-LAST:event_btn_verfacturaActionPerformed

    private void txt_title2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_title2FocusGained
        fechaCaducidadFocus(true);
    }//GEN-LAST:event_txt_title2FocusGained

    private void txt_title2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_title2FocusLost
       fechaCaducidadFocus(false);
    }//GEN-LAST:event_txt_title2FocusLost

    private void cb_pay_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_pay_typeActionPerformed
        checkPayType();
    }//GEN-LAST:event_cb_pay_typeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScreenBuyRent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ScreenBuyRent dialog = new ScreenBuyRent(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buy;
    private javax.swing.JButton btn_rent;
    private javax.swing.JButton btn_rent1;
    private javax.swing.JButton btn_verfactura;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cb_pay_type;
    private javax.swing.JComboBox<String> combo_pais;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPanel panel_form;
    private javax.swing.JRadioButton rb_card;
    private javax.swing.JRadioButton rb_transfer;
    private javax.swing.JSpinner spn_num_cuotas;
    private javax.swing.JLabel title_1;
    private javax.swing.JLabel title_2;
    private javax.swing.JLabel title_3;
    private javax.swing.JLabel title_4;
    private javax.swing.JLabel title_5;
    private javax.swing.JLabel title_6;
    private javax.swing.JLabel title_7;
    private javax.swing.JTextField txt_city;
    private javax.swing.JTextField txt_door;
    private javax.swing.JTextField txt_floor;
    private javax.swing.JTextField txt_number;
    private javax.swing.JTextField txt_poblation;
    private javax.swing.JTextField txt_portal;
    private javax.swing.JTextField txt_street;
    private javax.swing.JTextField txt_title1;
    private javax.swing.JTextField txt_title2;
    private javax.swing.JTextField txt_title3;
    private javax.swing.JComboBox<String> txt_title4;
    private javax.swing.JTextField txt_title5;
    private javax.swing.JTextField txt_zipcode;
    // End of variables declaration//GEN-END:variables

    private int num;
    private User user;
    private Utils utils;
    private Vehicle vehicle;
    private String mes, anio;
    private SalesController salesDao;
    private AddressController addressDao;
    private HashMap<String, String> paisesNacionalidades ;

    private void init(User user, Vehicle vehicle) {
        this.user = user;
        this.utils = new Utils(this);
        this.vehicle = vehicle;
        this.salesDao = new SalesController();
        this.addressDao = new AddressController();
        bloquearBotones(true, false);
    }
    
    private void setMode(boolean isBuyMode){
        btn_buy.setBackground(isBuyMode ? Color.lightGray : new Color(255, 153, 255));
        btn_rent.setBackground(isBuyMode ? new Color(255, 153, 255) : Color.lightGray);
        cb_pay_type.setSelectedIndex(isBuyMode ? 0 : 1);
        initform();
        btn_rent.setEnabled(isBuyMode);
        btn_buy.setEnabled(!isBuyMode);
        spn_num_cuotas.setValue(isBuyMode ? 1 : 36);
        cb_pay_type.setEnabled(isBuyMode);
        spn_num_cuotas.setEnabled(false);    
    }
        
    private void initform() {
        configrbs();
        rellenarCombo();
        rellenarDatosDireccion();
        bloquearBotones(true, true);
        checkPayType();
    }
    
    private void rellenarCombo() {
        paisesNacionalidades = utils.getPaisesNacionalidades();
        ArrayList<String> comboSort = new ArrayList<>();
        
        for (String value : paisesNacionalidades.keySet()) {
            comboSort.add(value);
        }
        Collections.sort(comboSort);
        
        for (int i = 0; i < comboSort.size(); i++) {
            combo_pais.addItem(comboSort.get(i));
        }
    }     
    private void rellenarDatosDireccion(){
        if(user.getAddress() != null){
            txt_poblation.setText(user.getAddress().getPoblation());
            txt_street.setText(user.getAddress().getStreet_name());
            txt_zipcode.setText(user.getAddress().getPostal_code()+"");
            txt_number.setText(user.getAddress().getStreet_num()+"");
            txt_portal.setText(user.getAddress().getPortal()+"");
            txt_floor.setText(user.getAddress().getFloor()+"");
            txt_city.setText(user.getAddress().getCity());
            txt_door.setText(user.getAddress().getDoor());
            combo_pais.setSelectedItem(user.getAddress().getCountry());
        }
    }

    private boolean correctPaymentFormat() {
        if (rb_transfer.isSelected()) {
            if (!controlIBAN()) {
                utils.showMessage("El IBAN no es correcto.");
                return false;
            }
            if (txt_title2.getText().equals("")) {
                utils.showMessage("Por favot, introduzca el nombre del banco.");
                return false;
            }
            if (txt_title3.getText().equals("")) {
                utils.showMessage("Por favot, introduzca el nombre del titular del banco.");
                return false;
            }
        } else {
            if (!controlNumberCreditCard()) {
                utils.showMessage("El numero de la tarjeta no es correcto.");
                return false;
            }
            if (!controlDateCreditCard()) {
                utils.showMessage("La fecha de caducidad de la tarjeta no es correcta o ha caducado.");
                return false;
            }
            if (txt_title3.getText().equals("")) {
                utils.showMessage("Por favot, introduzca el nombre del titular de la tarjeta.");
                return false;
            }
            if (!controlCVVCreditCard()) {
                utils.showMessage("El CVV de la tarjeta no es correcto.");
                return false;
            }
        }
        return true;
    }

    private boolean correctAddressFormat() {
        if (txt_city.getText().equals("")) {
            utils.showMessage("Rellene el campo de Ciudad de manera correcta.");
            return false;
        }
        if (txt_poblation.getText().equals("")) {
            utils.showMessage("Rellene el campo de Población de manera correcta.");
            return false;
        }
        if (txt_zipcode.getText().equals("") && !txt_zipcode.getText().matches("\\d+")) {
            utils.showMessage("Rellene el campo de Código postal de manera correcta.");
            return false;
        }
        if (txt_street.getText().equals("")) {
            utils.showMessage("Rellene el campo de Nombre de la calle de manera correcta.");
            return false;
        }
        if (!txt_number.getText().matches("\\d+")) {
            utils.showMessage("Rellene el campo de Número de manera correcta.");
            return false;
        }
        if (txt_portal.getText().isEmpty() || !txt_portal.getText().matches("\\d+")) {
            utils.showMessage("Si tu dirección no incluye bloque, rellena el campo con un 0.");
            return false;
        }
        if (txt_floor.getText().isEmpty() || !txt_floor.getText().matches("\\d+")) {
            utils.showMessage("Si tu dirección no incluye planta, rellena el campo con un 0.");
            return false;
        }
        if (txt_door.getText().equals("")) {
            txt_door.setText(" ");
        }
        return true;
    }

    private boolean controlIBAN() {
        return Pattern.compile("^([A-Z]{2}\\d{2})(\\d{4})(\\d{4})(\\d{2})([A-Z0-9]{0,})$").matcher(txt_title1.getText()).matches();
    }

    private boolean controlNumberCreditCard() {
        try {
            String numeroTarjetaSinFormato = txt_title1.getText().replace(" ", "").replace("-", "");
            int primerDigito = Integer.parseInt(numeroTarjetaSinFormato.substring(0, 1));
            String ultimosCuatroDigitos = numeroTarjetaSinFormato.substring(12);
            
            if (numeroTarjetaSinFormato.length() != 16) {
                return false;
            } 
            if (!numeroTarjetaSinFormato.matches("\\d+")) {
                return false;
            } 
            if (primerDigito != 4 && primerDigito != 5) {
                return false;
            }
            if (Integer.parseInt(ultimosCuatroDigitos) == 0) {
                return false;
            }
        } catch (NumberFormatException e) {
            return false;
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    private boolean controlDateCreditCard() {
        try {
            java.time.YearMonth fechaActual = java.time.YearMonth.now();
            String[] partesFecha = txt_title2.getText().split("/");
            
            mes = partesFecha[0];
            anio = partesFecha[1];
            int mesCaducidad = Integer.parseInt(mes);
            int anioCaducidad = Integer.parseInt(anio);
            
            if (anioCaducidad < fechaActual.getYear() || (anioCaducidad == fechaActual.getYear() && mesCaducidad < fechaActual.getMonthValue())) {
                return false;
            }
            
        } catch (NumberFormatException e) {
            return false;
        }
        return txt_title2.getText().length() == 7;
    }

    private boolean controlCVVCreditCard() {
        try {
            if (!txt_title5.getText().matches("\\d+")) {
                return false;
            }
            if (txt_title5.getText().length() < 3) {
                return false;
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    private void configrbs() {
        boolean cardIsSelected = rb_card.isSelected(); 
        title_1.setText(cardIsSelected ? "Número de la tarjeta" : "IBAN");
        title_2.setText(cardIsSelected ? "Fecha de caducidad" : "Nombre del banco");
        title_3.setText(cardIsSelected ? "Titular de la tarjeta" : "Titular del banco");
        txt_title2.setForeground(cardIsSelected ? Color.GRAY : Color.BLACK);
        txt_title2.setText(cardIsSelected ? "MM/YYYY" : "");
        title_4.setText("Emisor de la tarjeta");
        txt_title4.setVisible(cardIsSelected);
        txt_title5.setVisible(cardIsSelected);
        title_4.setVisible(cardIsSelected);
        title_5.setVisible(cardIsSelected);
        txt_title4.setSelectedIndex(0);
        title_5.setText("CVV");
        txt_title1.setText("");
        txt_title3.setText("");
        txt_title5.setText("");
    }
        
    private String getSaleType() {
        if (!btn_buy.isEnabled()) {    
            String saleType = btn_buy.getText().substring(0, btn_buy.getText().length() - 1);
            return saleType.substring(0, 1).toUpperCase() + saleType.substring(1).toLowerCase();
        } else {
            String saleType = btn_rent.getText().substring(0, btn_rent.getText().length() - 1);
            return saleType.substring(0, 1).toUpperCase() + saleType.substring(1).toLowerCase();
        }
    }
    
    private String getPaymentMethod(){
        if (rb_card.isSelected()) {    
            return rb_card.getText();
        } else {
            return rb_transfer.getText(); 
        }
    }
    
    private void finalizarCompra(){
        Address address = createAddress();
        Sales sales = createSales();
        num = sales.getAmount_payments();

        if(user.getAddress() != null){
            addressDao.update(address);
        } else {
            addressDao.create(address);
        }
        user.setAddress(address);
        
        if (verificarCompraRenta()) {
            if (rb_card.isSelected()) {
                realizarPago();
            }
            if(salesDao.create(sales)){
                utils.showMessage("Compra finalizada correctamente.\nTe enviaremos la factura al email.");
            } else {
                utils.showMessage("Se ha producido un error al finalizar la compra");
            }
            bloquearBotones(false, false);
            updateMainScreen();
        }
    }
    
    private void realizarPago() {
        try {
            new PaymentUtil().paymentFunc(txt_title1.getText(), mes, anio, txt_title5.getText());
        } catch (Exception e) {
            utils.showMessage("Ha ocurrido un error en el pago.");
        }
    }
    
    private Address createAddress() {
        return new Address(
            user.getId(),
            txt_city.getText(),
            txt_door.getText(),
            combo_pais.getSelectedItem().toString(),
            txt_poblation.getText(),
            txt_street.getText(),
            Integer.parseInt(txt_zipcode.getText()),
            Integer.parseInt(txt_number.getText()),
            Integer.parseInt(txt_portal.getText()),
            Integer.parseInt(txt_floor.getText())
        );
    }

    private Sales createSales() {
        return new Sales(
            0,
            new Date(),
            getSaleType(),
            cb_pay_type.getSelectedItem().toString(),
            getPaymentMethod(),
            (int) spn_num_cuotas.getValue(),
            vehicle.getId(),
            user.getId()
        );
    }
    
    private boolean verificarCompraRenta() {
        try {
            String code = utils.generateVerificationCode();
            String typeEmail = getTypeEmail();
            String message = getMessage(typeEmail);
            SendEmail sendEmail = new SendEmail();

            sendEmail.createEmail(code, user.getEmail(), typeEmail);

            if (utils.showInputDialog(message).equals(code)) {
                generarPdf(user.getAddress());
                sendEmail.createEmail(code, user.getEmail(), "facture");
                return true;
            } else {
                utils.showMessage("Has introducido el código de manera errónea");
                return false;
            }
        } catch (HeadlessException e) {
            return false;
        } catch (Exception e) {
            return false;
        }
    }
    
    private String getTypeEmail() {
        if (getSaleType().equals("Compra")) {
            return "verify";
        } else {
            return "contract";
        }
    }

    private String getMessage(String typeEmail) {
        if (typeEmail.equals("verify")) {
            return "Introduce el código de verificación que te ha llegado a tu correo electrónico para aceptar la compra";
        } else {
            return "Te hemos enviado el contrato a tu correo electrónico junto a una clave de firma. Introduce la clave de firma para aceptar la renta";
        }
    }

    private void generarPdf(Address address) {
        try {
            InvoiceFormatPDF cepdf = new InvoiceFormatPDF("factura.pdf");
            cepdf.createDocument();

            HeaderDetails header = new HeaderDetails();
            header.setInvoiceNo("MM226924");
            header.setInvoiceDate(LocalDate.now().format(DateTimeFormatter.ofPattern("dd-MM-yyyy")));
            header.build();
            cepdf.createHeader(header);

            InfoDetails addressDetails = new InfoDetails();
            addressDetails.setBillingCompany(getPaymentMethod());
            addressDetails.setBillingName(user.getEmail());
            addressDetails.setShippingName(user.getName() + " " + user.getSurname());
            addressDetails.setShippingAddress(address.getStreet_name() + "\n" + address.getPortal() + " " + address.getFloor() + address.getDoor() + "\n" + address.getPoblation() + ", " + address.getPostal_code());
            addressDetails.build();
            cepdf.createAddress(addressDetails);

            ProductHeader productTableHeader = new ProductHeader();
            cepdf.createTableHeader(productTableHeader);
            ArrayList<Product> productList = cepdf.getProductList(vehicle.getBrand()+" "+vehicle.getModel(), vehicle.getPrice(), num);
            cepdf.createProduct(productList);

            cepdf.closeDocument();
            
        } catch (FileNotFoundException e) {
            utils.showMessage("Ha ocurrido un error al generar el pdf");
        }
    }
    
    private void verFactura(){
        File file = new File("factura.pdf");
        if (Desktop.isDesktopSupported()) {
            Desktop desktop = Desktop.getDesktop();
            if (file.exists()) {
                try {
                    desktop.open(file);
                } catch (IOException e) {
                }
            }
        }
    }
    
    private void comprobarDatos() {
        if (correctPaymentFormat() && correctAddressFormat()) {
            if(utils.showConfirmDialog("Deseas finalizar la compra?", "Finalizar compra") == 0){
                finalizarCompra();
            }
        }
    }
    
    private void bloquearBotones(boolean buyRent, boolean enabled){
        btn_verfactura.setEnabled(!buyRent);
        btn_buy.setEnabled(buyRent);
        btn_rent.setEnabled(buyRent);
        btn_rent1.setEnabled(enabled);
        cb_pay_type.setEnabled(enabled);
        combo_pais.setEnabled(enabled);
        rb_card.setEnabled(enabled);
        rb_transfer.setEnabled(enabled);
        spn_num_cuotas.setEnabled(enabled);
        txt_city.setEnabled(enabled);
        txt_door.setEnabled(enabled);
        txt_floor.setEnabled(enabled);
        txt_number.setEnabled(enabled);
        txt_poblation.setEnabled(enabled);
        txt_portal.setEnabled(enabled);
        txt_street.setEnabled(enabled);
        txt_title1.setEnabled(enabled);
        txt_title2.setEnabled(enabled);
        txt_title3.setEnabled(enabled);
        txt_title4.setEnabled(enabled);
        txt_title5.setEnabled(enabled);
        txt_zipcode.setEnabled(enabled);
    }

    private void fechaCaducidadFocus(boolean gained) {
        if (rb_card.isSelected()) {    
            if (txt_title2.getText().equals(gained ? "MM/YYYY" : "")) {
                txt_title2.setText(gained ? "" : "MM/YYYY");
                txt_title2.setForeground(gained ? Color.BLACK : Color.GRAY);
            }
        }   
    }                                      

    private void checkPayType() {
        if(cb_pay_type.getSelectedIndex() == 0){
            spn_num_cuotas.setEnabled(false);
            spn_num_cuotas.setValue(1);
        } else {
            spn_num_cuotas.setEnabled(true);
            spn_num_cuotas.setValue(12);
        }        
    }
    
    private void updateMainScreen(){
        MainScreen main = (MainScreen) getParent();
        main.actualizarTabla();
    }
}