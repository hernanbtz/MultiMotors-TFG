package com.multimotors.forms;

import com.multimotors.models.Vehicle;
import com.multimotors.utils.AWSFiles;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.title.LegendTitle;
import org.jfree.chart.title.TextTitle;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.ui.RectangleEdge;

/**
 * @author Sergio
 * @author Fabian 
 */
public class CompareScreen extends javax.swing.JDialog {
    
    public CompareScreen(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
    }

    public CompareScreen(java.awt.Frame parent, boolean modal, Vehicle v1, Vehicle v2) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        init(v1, v2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        txt_photov2 = new javax.swing.JLabel();
        txt_photov1 = new javax.swing.JLabel();
        txt_brandv1 = new javax.swing.JLabel();
        txt_modelv1 = new javax.swing.JLabel();
        txt_brandv2 = new javax.swing.JLabel();
        txt_modelv2 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txt_consumptionv2 = new javax.swing.JLabel();
        txt_weightv1 = new javax.swing.JLabel();
        txt_weightv2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        txt_fueltankv2 = new javax.swing.JLabel();
        txt_consumptionv1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_fueltankv1 = new javax.swing.JLabel();
        txt_kmv1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        txt_ccv1 = new javax.swing.JLabel();
        txt_pricev2 = new javax.swing.JLabel();
        txt_kmv2 = new javax.swing.JLabel();
        txt_fueltypev2 = new javax.swing.JLabel();
        txt_ccv2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        txt_pricev1 = new javax.swing.JLabel();
        txt_tractionv2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        txt_tractionv1 = new javax.swing.JLabel();
        txt_transmissionv1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txt_fueltypev1 = new javax.swing.JLabel();
        txt_transmissionv2 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        txt_yearv1 = new javax.swing.JLabel();
        txt_yearv2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        panel_radar = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(204, 204, 204));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel7.add(txt_photov2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 20, 240, 190));
        jPanel7.add(txt_photov1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 240, 190));

        txt_brandv1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txt_brandv1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txt_brandv1.setText("BMW");
        jPanel7.add(txt_brandv1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 330, -1));

        txt_modelv1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txt_modelv1.setForeground(new java.awt.Color(102, 102, 102));
        txt_modelv1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txt_modelv1.setText("X1");
        jPanel7.add(txt_modelv1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 330, -1));

        txt_brandv2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txt_brandv2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_brandv2.setText("BMW");
        jPanel7.add(txt_brandv2, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 30, 310, -1));

        txt_modelv2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txt_modelv2.setForeground(new java.awt.Color(102, 102, 102));
        txt_modelv2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_modelv2.setText("X1");
        jPanel7.add(txt_modelv2, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 60, 310, -1));

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Card_Content.png"))); // NOI18N
        jLabel26.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel7.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 450, 190));

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Card_Content.png"))); // NOI18N
        jLabel29.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel7.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 20, 450, 190));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_consumptionv2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txt_consumptionv2.setText("jLabel14");
        jPanel2.add(txt_consumptionv2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 120, 120, -1));

        txt_weightv1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_weightv1.setText("jLabel14");
        jPanel2.add(txt_weightv1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 130, -1));

        txt_weightv2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txt_weightv2.setText("jLabel14");
        jPanel2.add(txt_weightv2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 340, 120, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("AÃ‘O");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 170, -1));
        jPanel2.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 450, 20));

        txt_fueltankv2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txt_fueltankv2.setText("jLabel14");
        jPanel2.add(txt_fueltankv2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 150, 120, -1));

        txt_consumptionv1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_consumptionv1.setText("jLabel14");
        jPanel2.add(txt_consumptionv1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 130, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("COMBUSTIBLE");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 170, -1));

        txt_fueltankv1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_fueltankv1.setText("jLabel14");
        jPanel2.add(txt_fueltankv1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 130, -1));

        txt_kmv1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_kmv1.setText("jLabel14");
        jPanel2.add(txt_kmv1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 130, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("PESO");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 170, -1));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 450, 20));

        txt_ccv1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_ccv1.setText("jLabel14");
        jPanel2.add(txt_ccv1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 130, -1));

        txt_pricev2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txt_pricev2.setText("jLabel14");
        jPanel2.add(txt_pricev2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, 120, -1));

        txt_kmv2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txt_kmv2.setText("jLabel14");
        jPanel2.add(txt_kmv2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 220, 120, -1));

        txt_fueltypev2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txt_fueltypev2.setText("jLabel14");
        jPanel2.add(txt_fueltypev2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, 120, -1));

        txt_ccv2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txt_ccv2.setText("jLabel14");
        jPanel2.add(txt_ccv2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 300, 120, -1));
        jPanel2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 450, 20));

        txt_pricev1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_pricev1.setText("jLabel14");
        jPanel2.add(txt_pricev1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 130, -1));

        txt_tractionv2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txt_tractionv2.setText("jLabel14");
        jPanel2.add(txt_tractionv2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 380, 120, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("PRECIO");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, 70, -1));
        jPanel2.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 450, 20));

        txt_tractionv1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_tractionv1.setText("jLabel14");
        jPanel2.add(txt_tractionv1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, 130, -1));

        txt_transmissionv1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_transmissionv1.setText("jLabel14");
        jPanel2.add(txt_transmissionv1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 130, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("POTENCIA");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 300, 170, -1));

        txt_fueltypev1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_fueltypev1.setText("jLabel14");
        jPanel2.add(txt_fueltypev1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 130, -1));

        txt_transmissionv2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txt_transmissionv2.setText("jLabel14");
        jPanel2.add(txt_transmissionv2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, 120, -1));
        jPanel2.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 450, 20));
        jPanel2.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 450, 20));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("TRANSMISION");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 170, -1));

        txt_yearv1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txt_yearv1.setText("jLabel14");
        jPanel2.add(txt_yearv1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 130, -1));

        txt_yearv2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txt_yearv2.setText("jLabel14");
        jPanel2.add(txt_yearv2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 260, 120, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("KILOMETROS");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 170, -1));
        jPanel2.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 450, 20));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("TRACCION");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 380, 170, -1));

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Card_Content.png"))); // NOI18N
        jLabel30.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 450, 190));

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Card_Content.png"))); // NOI18N
        jLabel28.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 450, 190));

        jPanel7.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 500, 430));

        panel_radar.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.add(panel_radar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 250, 520, 380));

        getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 1190, 660));

        jPanel1.setBackground(new java.awt.Color(244, 243, 243));
        jPanel1.setForeground(new java.awt.Color(60, 63, 65));
        jPanel1.setMaximumSize(new java.awt.Dimension(1280, 720));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/myacc_wp.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setMaximumSize(new java.awt.Dimension(1280, 720));
        jLabel1.setMinimumSize(new java.awt.Dimension(1280, 720));
        jLabel1.setPreferredSize(new java.awt.Dimension(1280, 720));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompareScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CompareScreen dialog = new CompareScreen(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JPanel panel_radar;
    private javax.swing.JLabel txt_brandv1;
    private javax.swing.JLabel txt_brandv2;
    private javax.swing.JLabel txt_ccv1;
    private javax.swing.JLabel txt_ccv2;
    private javax.swing.JLabel txt_consumptionv1;
    private javax.swing.JLabel txt_consumptionv2;
    private javax.swing.JLabel txt_fueltankv1;
    private javax.swing.JLabel txt_fueltankv2;
    private javax.swing.JLabel txt_fueltypev1;
    private javax.swing.JLabel txt_fueltypev2;
    private javax.swing.JLabel txt_kmv1;
    private javax.swing.JLabel txt_kmv2;
    private javax.swing.JLabel txt_modelv1;
    private javax.swing.JLabel txt_modelv2;
    private javax.swing.JLabel txt_photov1;
    private javax.swing.JLabel txt_photov2;
    private javax.swing.JLabel txt_pricev1;
    private javax.swing.JLabel txt_pricev2;
    private javax.swing.JLabel txt_tractionv1;
    private javax.swing.JLabel txt_tractionv2;
    private javax.swing.JLabel txt_transmissionv1;
    private javax.swing.JLabel txt_transmissionv2;
    private javax.swing.JLabel txt_weightv1;
    private javax.swing.JLabel txt_weightv2;
    private javax.swing.JLabel txt_yearv1;
    private javax.swing.JLabel txt_yearv2;
    // End of variables declaration//GEN-END:variables

    private Vehicle v1;
    private Vehicle v2;  
    private AWSFiles awsImages;
    private List<BufferedImage> images;
    private ArrayList<String> imagesName;
    
    private void init(Vehicle v1, Vehicle v2){
        this.v1 = v1;
        this.v2 = v2;
        this.awsImages = new AWSFiles();
        this.imagesName = new ArrayList<>();
        initVehiclev1(v1);
        initVehiclev2(v2);
        dataCompare();
        graficoRadar();
    }
    
    private void initVehiclev1(Vehicle v1) {
        txt_brandv1.setText(v1.getBrand());
        txt_modelv1.setText(v1.getModel());
        txt_pricev1.setText(String.valueOf(v1.getPrice()) + " â‚¬");
        txt_fueltypev1.setText(v1.getSpecs().getFuel_type());
        txt_consumptionv1.setText(String.valueOf(v1.getSpecs().getConsumption()) + " L / 100km");
        txt_fueltankv1.setText(String.valueOf(v1.getSpecs().getFuel_tank()) + " L");
        txt_transmissionv1.setText(v1.getSpecs().getTransmission_type());
        txt_kmv1.setText(String.valueOf(v1.getSpecs().getKilometres()) + " km");
        txt_yearv1.setText(String.valueOf(v1.getSpecs().getModel_year()));
        txt_ccv1.setText(String.valueOf(v1.getSpecs().getEngine_cc()) + " cv");
        txt_weightv1.setText(String.valueOf(v1.getSpecs().getWeight()));
        txt_tractionv1.setText(v1.getSpecs().getTraction());

        initImages(v1);
        putImage(txt_photov1);
    }

    private void initVehiclev2(Vehicle v2) {
        txt_brandv2.setText(v2.getBrand());
        txt_modelv2.setText(v2.getModel());
        txt_pricev2.setText(String.valueOf(v2.getPrice()) + " â‚¬");
        txt_fueltypev2.setText(v2.getSpecs().getFuel_type());
        txt_consumptionv2.setText(String.valueOf(v2.getSpecs().getConsumption()) + " L / 100km");
        txt_fueltankv2.setText(String.valueOf(v2.getSpecs().getFuel_tank()) + " L");
        txt_transmissionv2.setText(v2.getSpecs().getTransmission_type());
        txt_kmv2.setText(String.valueOf(v2.getSpecs().getKilometres()) + " km");
        txt_yearv2.setText(String.valueOf(v2.getSpecs().getModel_year()));
        txt_ccv2.setText(String.valueOf(v2.getSpecs().getEngine_cc()) + " cv");
        txt_weightv2.setText(String.valueOf(v2.getSpecs().getWeight()));
        txt_tractionv2.setText(v2.getSpecs().getTraction());

        initImages(v2);
        putImage(txt_photov2);
    }
    
    private void initImages(Vehicle v) {
        imagesName = new ArrayList<>();
        String dato = v.getPhotos();
        if(dato.equals("") || dato.equals("null")){
            dato = "noimageavailable.jpg";
        }
        String[] imagenes = dato.split("-");
        imagesName.addAll(Arrays.asList(imagenes));     
        images = awsImages.downloadImages(imagesName);
    }

    private void putImage(JLabel txt_photo) {
        Image imgEscalada = images.get(0).getScaledInstance(txt_photo.getWidth(),txt_photo.getHeight(), Image.SCALE_SMOOTH);
        Icon iconoEscalado = new ImageIcon(imgEscalada);
        txt_photo.setIcon(iconoEscalado);
    }

    private void dataCompare() {
        if (v1.getPrice() > v2.getPrice()) {
            txt_pricev1.setForeground(Color.RED);
            txt_pricev2.setForeground(Color.GREEN);
        } else if (Objects.equals(v1.getPrice(), v2.getPrice())) {
            txt_pricev1.setForeground(Color.YELLOW);
            txt_pricev2.setForeground(Color.YELLOW);
        } else {
            txt_pricev1.setForeground(Color.GREEN);
            txt_pricev2.setForeground(Color.RED);
        }

        if (v1.getSpecs().getConsumption() > v2.getSpecs().getConsumption()) {
            txt_consumptionv1.setForeground(Color.RED);
            txt_consumptionv2.setForeground(Color.GREEN);
        } else if (v1.getSpecs().getConsumption() == v2.getSpecs().getConsumption()) {
            txt_consumptionv1.setForeground(Color.YELLOW);
            txt_consumptionv2.setForeground(Color.YELLOW);
        } else {
            txt_consumptionv1.setForeground(Color.GREEN);
            txt_consumptionv2.setForeground(Color.RED);
        }

        if (v1.getSpecs().getKilometres() > v2.getSpecs().getKilometres()) {
            txt_kmv1.setForeground(Color.RED);
            txt_kmv2.setForeground(Color.GREEN);
        } else if (v1.getSpecs().getKilometres() == v2.getSpecs().getKilometres()) {
            txt_kmv1.setForeground(Color.YELLOW);
            txt_kmv2.setForeground(Color.YELLOW);
        } else {
            txt_kmv1.setForeground(Color.GREEN);
            txt_kmv2.setForeground(Color.RED);
        }

        if (v1.getSpecs().getFuel_tank() > v2.getSpecs().getFuel_tank()) {
            txt_fueltankv1.setForeground(Color.GREEN);
            txt_fueltankv2.setForeground(Color.RED);
        } else if (v1.getSpecs().getFuel_tank() == v2.getSpecs().getFuel_tank()) {
            txt_fueltankv1.setForeground(Color.YELLOW);
            txt_fueltankv2.setForeground(Color.YELLOW);
        } else {
            txt_fueltankv1.setForeground(Color.RED);
            txt_fueltankv2.setForeground(Color.GREEN);
        }

        if (v1.getSpecs().getModel_year() > v2.getSpecs().getModel_year()) {
            txt_yearv1.setForeground(Color.GREEN);
            txt_yearv2.setForeground(Color.RED);
        } else if (v1.getSpecs().getModel_year() == v2.getSpecs().getModel_year()) {
            txt_yearv1.setForeground(Color.YELLOW);
            txt_yearv2.setForeground(Color.YELLOW);
        } else {
            txt_yearv1.setForeground(Color.RED);
            txt_yearv2.setForeground(Color.GREEN);
        }

        if (v1.getSpecs().getEngine_cc() > v2.getSpecs().getEngine_cc()) {
            txt_ccv1.setForeground(Color.GREEN);
            txt_ccv2.setForeground(Color.RED);
        } else if (v1.getSpecs().getEngine_cc() == v2.getSpecs().getEngine_cc()) {
            txt_ccv1.setForeground(Color.YELLOW);
            txt_ccv2.setForeground(Color.YELLOW);
        } else {
            txt_ccv1.setForeground(Color.RED);
            txt_ccv2.setForeground(Color.GREEN);
        }

        if (v1.getSpecs().getWeight() > v2.getSpecs().getWeight()) {
            txt_weightv1.setForeground(Color.RED);
            txt_weightv2.setForeground(Color.GREEN);
        } else if (v1.getSpecs().getWeight() == v2.getSpecs().getWeight()) {
            txt_weightv1.setForeground(Color.YELLOW);
            txt_weightv2.setForeground(Color.YELLOW);
        } else {
            txt_weightv1.setForeground(Color.GREEN);
            txt_weightv2.setForeground(Color.RED);
        }
    }

    private void graficoRadar() {
        String s = v1.getBrand() + " " + v1.getModel();
        String s1 = v2.getBrand() + " " + v2.getModel();
        String s3 = "Precio";
        String s4 = "AÃ±o";
        String s5 = "Peso";
        String s6 = "Kilometros";
        String s7 = "Potencia";
        String s8 = "Consumo";
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        double[] priceValues = {v1.getPrice(), v2.getPrice()};
        double priceMaxValue = getMaxValue(priceValues);
        dataset.addValue(scaleToRange(v1.getPrice(), priceMaxValue), s, s3);
        dataset.addValue(scaleToRange(v2.getPrice(), priceMaxValue), s1, s3);

        double[] modelYearValues = {v1.getSpecs().getModel_year(), v2.getSpecs().getModel_year()};
        double modelYearMaxValue = getMaxValue(modelYearValues);
        dataset.addValue(scaleToRange(v1.getSpecs().getModel_year(), modelYearMaxValue), s, s4);
        dataset.addValue(scaleToRange(v2.getSpecs().getModel_year(), modelYearMaxValue), s1, s4);

        double[] weightValues = {v1.getSpecs().getWeight(), v2.getSpecs().getWeight()};
        double weightMaxValue = getMaxValue(weightValues);
        dataset.addValue(scaleToRange(v1.getSpecs().getWeight(), weightMaxValue), s, s5);
        dataset.addValue(scaleToRange(v2.getSpecs().getWeight(), weightMaxValue), s1, s5);

        double[] kilometresValues = {v1.getSpecs().getKilometres(), v2.getSpecs().getKilometres()};
        double kilometresMaxValue = getMaxValue(kilometresValues);
        dataset.addValue(scaleToRange(v1.getSpecs().getKilometres(), kilometresMaxValue), s, s6);
        dataset.addValue(scaleToRange(v2.getSpecs().getKilometres(), kilometresMaxValue), s1, s6);

        double[] engineCCValues = {v1.getSpecs().getEngine_cc(), v2.getSpecs().getEngine_cc()};
        double engineCCMaxValue = getMaxValue(engineCCValues);
        dataset.addValue(scaleToRange(v1.getSpecs().getEngine_cc(), engineCCMaxValue), s, s7);
        dataset.addValue(scaleToRange(v2.getSpecs().getEngine_cc(), engineCCMaxValue), s1, s7);

        double[] consumptionValues = {v1.getSpecs().getConsumption(), v2.getSpecs().getConsumption()};
        double consumptionMaxValue = getMaxValue(consumptionValues);
        dataset.addValue(scaleToRange(v1.getSpecs().getConsumption(), consumptionMaxValue), s, s8);
        dataset.addValue(scaleToRange(v2.getSpecs().getConsumption(), consumptionMaxValue), s1, s8);

        SpiderWebPlot plot = new SpiderWebPlot(dataset);
        plot.setToolTipGenerator(new StandardCategoryToolTipGenerator());
        JFreeChart chart = new JFreeChart("COMPARATIVA DE CARACTERISTICAS", TextTitle.DEFAULT_FONT, plot, false);
        LegendTitle legendtitle = new LegendTitle(plot);
        legendtitle.setPosition(RectangleEdge.BOTTOM);
        chart.addSubtitle(legendtitle);
        ChartPanel chartpanel = new ChartPanel(chart);
        chartpanel.setPreferredSize(new Dimension(panel_radar.getWidth(), panel_radar.getHeight()));
        panel_radar.add(chartpanel);
    }

    public double scaleToRange(double value, double max) {
        double min = 0;
        double newMin = 1;
        double newMax = 10;
        if (value < min) {
            value = min;
        } else if (value > max) {
            value = max;
        }
        double ratio = (value - min) / (max - min);
        double scaledValue = ratio * (newMax - newMin) + newMin;
        return scaledValue;
    }

    public double getMaxValue(double[] values) {
        double max = Double.MIN_VALUE;
        for (double value : values) {
            if (value > max) {
                max = value;
            }
        }
        return max;
    }
}